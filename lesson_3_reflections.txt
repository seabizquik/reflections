Reflect: Using a remote repository: When would you want to use a remote repository rather than keeping all your work local?

1. Remote repositories are useful when several different people are working together or when you are working from multiple machines.

Reflect: Manual vs. automatic pull: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

1. If you are working with a team, it's good to all be working from the same version in GitHub. It is also good to know yourself when your remote updated, since it might be confusing if it updated in the middle of a task.

Reflect: Forks, Clones, and Branches: Describe the differences between forks, clones, and branches. When would you use one or the other?

1. Forks are copies of others' repositories on GitHub - used when you want to work on their code but don't want to change the origin version
2. Clones are local copies of repositories - when you want to work on code from your own machine
3. Branches are changes off a single repository - used when making experimental changes or creating different versions

Reflect: Local copies of remote branches: What is the benefit of having a copy of the last known state of the remote stored locally?

1. If you are working with others, it ensures that you are working on the most up-to-date files. 

Reflect: Collaboration using Git and GitHub: How would you collaborate using Git or GitHub? What would be easier and what would be harder?

1. You can create separate branches on a project, then share them with collaboarators, making comments on each others work. It would be easier to work on the code from any machine and to see the most up to date repo. It would be a little harder to work together, since people could be making simultaneous changes and with so many different branches it could become confusing.

Reflect: When to use a separate branch: When would you want to make changes in a separate branch rather than directly in master? What benefits does each have?

1. You would want to use a separate branch if you are making changes that could break something in the master branch, or if you are working on a different version. This will also allow others to look at this separate branch on GitHub. 